//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Um.DataServices.Web
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IatiDbEntities : DbContext
    {
        public IatiDbEntities()
            : base("name=IatiDbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Aidtype> Aidtypes { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<Finanslov> Finanslovs { get; set; }
        public virtual DbSet<Organisation> Organisations { get; set; }
        public virtual DbSet<Sector> Sectors { get; set; }
        public virtual DbSet<Channel> Channels { get; set; }
    
        public virtual ObjectResult<Activities_Result> GetActivitiesXml(string recipientCountry, string region, string sector)
        {
            var recipientCountryParameter = recipientCountry != null ?
                new ObjectParameter("RecipientCountry", recipientCountry) :
                new ObjectParameter("RecipientCountry", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var sectorParameter = sector != null ?
                new ObjectParameter("Sector", sector) :
                new ObjectParameter("Sector", typeof(string));

            ((IObjectContextAdapter)this).ObjectContext.CommandTimeout = 3000;

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Activities_Result>("GetActivitiesXml", recipientCountryParameter, regionParameter, sectorParameter);
        }
    }
}
